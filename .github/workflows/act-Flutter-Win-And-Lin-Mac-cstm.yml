# act-Flutter-Win-And-Lin-Mac-cstm.yml
# 2025-09-20 08:00
# flutter 3.24.5, generate_bridge on linux
# progversion, no IDD, 
# changed: Replace engine with rustdesk custom flutter engine - default true (for win7)
# changed: Install Rust toolchain. uses: deep-soft/rust-toolchain@master
# windows-2022, sed-stuff, sha256 for self-extract
# runner.rc, change ProductVersion, Copyright 2024, vcpkg
name: 0-act - Flutter - Win-And-Lin-Mac - cstm

env:
  GUI:                         "Win-And-Lin-Mac-iOS"
  TAG_NAME:                    "Win-And-Lin-Mac-cstm"
  TAG_VERSION:                 "rdsk-v1.2.1"
  TAG_BUILD:                   "-b"
  TAG_REF:                     "0000000"
  PROG_NAME:                   "rdsk"
  PROG_VERSION:                "v1.0.0"
  VERSION:                     "1.0.0"
  DEBUG_LS:                    "yes"
  # To make a custom build with your own servers set the below secret values
  RS_PUB_KEY:                  '${{ secrets.RS_PUB_KEY        }}'
  RENDEZVOUS_SERVER:           '${{ secrets.RENDEZVOUS_SERVER }}'
  API_SERVER:                  '${{ secrets.API_SERVER        }}'
  RDSK_PCH_SH_PRE:             '${{ secrets.RDSK_PCH_SH_PRE   }}'
  RDSK_PCH_SH:                 '${{ secrets.RDSK_PCH_SH       }}'
  RDSK_PCH_HL:                 '${{ secrets.RDSK_PCH_HL       }}'
  RDSK_PCH_SH2:                '${{ secrets.RDSK_PCH_SH2      }}'
  RDSK_PCH_SH4:                '${{ secrets.RDSK_PCH_SH4      }}'
  RDSK_PCH_SH4B:               '${{ secrets.RDSK_PCH_SH4B     }}'
  RDSK_PCH_SH_CLN:             '${{ secrets.RDSK_PCH_SH_CLN   }}'
  RUST_VERSION:                "1.75" # was "rust-1.76.0"
  WIN_RUST_VERSION:            "1.75"
  MAC_RUST_VERSION:            "1.81"
  LLVM_VERSION:                "15.0.6"
#  FLUTTER_VERSION:             "3.16.9"
#  FLUTTER_VERSION:             "3.19.6"
  BRIDGE_FLUTTER_VERSION:      "3.22.3" # flutter for bridge is "3.22.3"
  ANDROID_FLUTTER_VERSION:     "3.24.5"
  FLUTTER_VERSION:             "3.24.5" # bridge is "3.22.3"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  FLUTTER_ELINUX_VERSION:      "3.16.9"
  FLUTTER_ELINUX_COMMIT_ID:    "c02bd16e1630f5bd690b85c5c2456ac1920e25af"
  # vcpkg version: 2023.10.19
  # for multiarch gcc compatibility
  # VCPKG_COMMIT_ID:             "8eb57355a4ffb410a2e94c07b4dca2dffbee8e50"
  # vcpkg version: 2024.06.15
  # VCPKG_COMMIT_ID:             "f7423ee180c4b7f40d43402c2feb3859161ef625"
  # vcpkg version: 2024.07.12
  # VCPKG_COMMIT_ID:             "1de2026f28ead93ff1773e6e680387643e914ea1"
  # vcpkg version: 2024.11.16
  # VCPKG_COMMIT_ID:             "b2cb0da531c2f1f740045bfe7c4dac59f0b2b69c"
  # vcpkg version: 2025.01.13
  # VCPKG_COMMIT_ID:             "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  # vcpkg version: 2025.08.27
  VCPKG_COMMIT_ID:             "120deac3062162151622ca4860575a33844ba10b"
  VCPKG_DIRECTORY:             "C:\\vcpkg"
  VCPKG_BINARY_SOURCES:        "clear;x-gha,readwrite"
  CARGO_NDK_VERSION:           "3.1.2"
  NDK_VERSION:                 "r27c" # was "r27", "r26b", "r26d"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY:         '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  signingKeyBase64:         '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  alias:                    '${{ secrets.ANDROID_ALIAS }}'
  #  keyStorePassword:         '${{ secrets.ANDROID_KEY_STORE_PASSWORD }}'
  #  keyPassword:              '${{ secrets.ANDROID_KEY_PASSWORD }}'
  MACOS_P12_BASE64:            '${{ secrets.MACOS_P12_BASE64 }}'
  cargo_clippy_log:            "cargo-clippy.log"

on:
#  schedule:
#    # schedule build every night
#    - cron: "0 0 * * *"
  workflow_call:
  workflow_dispatch:
    inputs:
      # if: ${{ inputs.build-for-windows }}
      build-for-windows:
        description: Build for windows
        type: boolean
        required: true
        default: true
      # if: ${{ inputs.build-for-android }}
      build-for-android:
        description: Build for android
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.build-for-Linux-amd }}
      build-for-Linux-amd:
        description: Build for linux-amd
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.build-for-Linux-arm }}
      build-for-Linux-arm:
        description: Build for linux-arm
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.build-for-macOS }}
      build-for-macOS:
        description: Build for macOS
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.build-for-iOS }}
      build-for-iOS:
        description: Build for iOS
        type: boolean
        required: true
        default: false

jobs:
  build-for-windows:
    if: ${{ inputs.build-for-windows }}
    uses: ./.github/workflows/act-Flutter-Win-cstm.yml
    secrets: inherit

  build-for-android:
    if: ${{ inputs.build-for-android }}
    uses: ./.github/workflows/act-Flutter-And-cstm.yml
    secrets: inherit

  build-for-Linux-amd:
    if: ${{ inputs.build-for-Linux-amd }}
    uses: ./.github/workflows/act-Flutter-Lin-Amd-cstm.yml
    secrets: inherit

  build-for-Linux-arm:
    if: ${{ inputs.build-for-Linux-arm }}
    uses: ./.github/workflows/act-Flutter-Lin-Arm-cstm.yml
    secrets: inherit

  build-for-macOS:
    if: ${{ inputs.build-for-macOS }}
    uses: ./.github/workflows/act-Flutter-Mac-cstm.yml
    secrets: inherit

  build-for-iOS:
    if: ${{ inputs.build-for-iOS }}
    uses: ./.github/workflows/act-Flutter-iOS-cstm.yml
    secrets: inherit
